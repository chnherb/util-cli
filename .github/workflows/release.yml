on:
  push: # 每次 push 的时候触发
    # 创建 tag 时
    tags:
      - v*
    # 推送到 master 分支时
    branchs:
      - master

name: Build Release
jobs:
  release:
    if: startsWith(github.ref, 'refs/tags/') # 只有这次 Commit 是 创建 Tag 时，才进行后续发布操作
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2 # checkout 代码
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v2 # 配置 Go 环境
        with:
          go-version: "1.16.10" # 改成自己的版本

      - name: Check GITHUB_ENV
        run: |
          echo $GITHUB_REF_NAMEGITHUB_REF_NAME

      - run: mkdir -p ./output && cp README.md ./script/install.sh ./output
      # 这 3 条是交叉编译 Go 的指令，酌情修改。
      - run: CGO_ENABLED=0 GOOS=linux GOARCH=amd64 go build -o ./output/util-cli_linux_amd64 && cd ./output && tar -zcvf util-cli_${GITHUB_REF_NAME}_linux_amd64.tar.gz util-cli_linux_amd64 README.md install.sh && ls && cd ..
      - run: CGO_ENABLED=0 GOOS=darwin GOARCH=amd64 go build -o ./output/util-cli_darwin_amd64 && cd ./output && tar -zcvf util-cli_${GITHUB_REF_NAME}_darwin_amd64.tar.gz util-cli_darwin_amd64 README.md install.sh && ls && cd ..
#      - run: CGO_ENABLED=0 GOOS=windows GOARCH=amd64 go build -o ./output/util-cli_windows_amd64.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        with: # 将下述可执行文件 release 上去
          files: |
            ./output/util-cli_*_linux_amd64.tar.gz
            ./output/util-cli_*_darwin_amd64.tar.gz
#            ./output/util-cli_*_windows_amd64.exe
        env:
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }}